[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wiki"
description = "A wiki system written for the Django framework."
readme = "README.rst"
requires-python = ">=3.7"
license = "GPL-3.0"
keywords = ["django", "wiki", "markdown"]
authors = [
  { name = "Benjamin Bach", email = "benjamin@overtag.dk" },
]
maintainers = [
  { name = "Oscar Cortez", email = "om.cortez.2010@gmail.com" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Wiki",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
  "Django>=2.1,<4.2",
  "bleach[css]>=5",
  "Pillow",
  "django-nyt>=1.2.2",
  "django-mptt>=0.13,<0.15",
  "django-sekizai>=0.10",
  "sorl-thumbnail>=12.8,<13",
  "Markdown>=3.3,<3.4",
]
dynamic = ["version"]

[project.urls]
Homepage = "http://www.django-wiki.org"
Documentation = "https://django-wiki.readthedocs.io/en/latest/"
Tracker = "https://github.com/django-wiki/django-wiki/issues"
Source = "https://github.com/django-wiki/django-wiki"

[tool.hatch.publish.index]
disable = true

[tool.hatch.version]
path = "src/wiki/__about__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
]

[tool.hatch.envs.default]
dependencies = [
  "black>=22.3.0,<22.11",
  "codecov",
  "coverage",
  "ddt",
  "django-functest>=1.2,<1.6",
  "flake8>=3.7,<5.1",
  "pre-commit",
  "pytest-cov",
  "pytest-django",
  "pytest-pythonpath",
  "pytest>=6.2.5,<7.3",
]

[tool.hatch.envs.default.scripts]
cov = "coverage run --source wiki setup.py test && coverage report -m"
no-cov = "cov --no-cov {args}"
lint = "flake8 src/wiki tests/"
clean-build = "rm -fr build/ && rm -fr dist/ && rm -fr .eggs/ && find . -name '*.egg-info' -exec rm -fr {} + && find . -name '*.egg' -exec rm -f {} +"
clean-pyc = "find . -name '*.pyc' -exec rm -f {} && find . -name '*.pyo' -exec rm -f {} && find . -name '*~' -exec rm -f {} && find . -name '__pycache__' -exec rm -fr {}"
assets = "sassc --style compressed src/wiki/static/wiki/bootstrap/scss/wiki/wiki-bootstrap.scss src/wiki/static/wiki/bootstrap/css/wiki-bootstrap.min.css"

[tools.hatch.envs.test]
dependencies = [
  "codecov",
  "coverage",
  "ddt",
  "django-functest>=1.2,<1.6",
  "pytest-cov",
  "pytest-django",
  "pytest-pythonpath",
  "pytest>=6.2.5,<7.3",
  "black>=22.3.0,<22.11",
  "flake8>=3.7,<5.1",
  "pre-commit",
]

[tools.hatch.envs.test.scripts]
test = "pytest"
test-all = "tox"
lint = "flake8 src/wiki tests/"
clean = "rm -fr .tox/ && rm -f .coverage && rm -fr htmlcov/"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[tool.hatch.envs.transifex]
dependencies = [
  "transifex-client",
]

[tool.hatch.envs.transifex.scripts]
push = "cd src/wiki && django-admin makemessages -l en && cd .. && tx push -s"
pull = "tx pull -a && cd src/wiki && django-admin compilemessages"

[tool.hatch.envs.docs]
dependencies = [
  "Django>=3.1.13",
  "bleach>=3.3.0,<5.1",
  "sphinx>=3",
  "sphinx_rtd_theme==1.1.1",
]

[tool.hatch.envs.docs.scripts]
build = "make -C docs clean && rm -f docs/wiki*.rst && rm -f docs/modules.rst && sphinx-apidoc -o docs/ src/wiki && make -C docs html"
linkcheck = "sphinx-build -b linkcheck ./docs ./docs/_build"

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "src/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

